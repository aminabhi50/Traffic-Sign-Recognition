# -*- coding: utf-8 -*-
"""RM_Project_PreprocessDataset_GSTRB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lVnx1OJC_WpU50mQEq3wAszvLzFwl5xb
"""

import os
import numpy as np
import pandas as pd
import cv2

# Code for Unzip the Zip folder of Dataset
# !unzip "/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/GTSRB.zip" -d "/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/"

# Function to load the train data's images name and their labels
def trainDataLoad(path):
  data = []s
  labels = []
  for folder in os.listdir(path):
    for img in os.listdir(path + folder):
      data.append((path + folder + "/" + img))
      labels.append(folder)
  return np.array(data), np.array(labels)

# Images are resized and stored into numpy array
def resizeImages(images):
  X = np.ndarray((images.shape[0], 32*32*3), dtype=np.uint8)
  cr_img = []

  for i, img in enumerate(images):
    imgRead = cv2.imread(img, cv2.IMREAD_COLOR)
    try:
      X[i, :] = (cv2.resize(imgRead, (32, 32), interpolation=cv2.INTER_CUBIC)).reshape(32*32*3)       
    except:
      cr_img.append(i)
      print(i,"  ",img)
      print(cr_img)
    
    if i%1000 == 0:
      print("Processed Images = {}".format(i))
    if i == (images.shape[0]-1):
      print("Processed Images = {}".format(i+1))
  return X, cr_img

print("Processing of Training Data")
print("---------------------------")

trainPath = "/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/GTSRB/Train/"
trainData, trainLabels = trainDataLoad(trainPath)
print("Total Training Data = {}".format(trainData.shape))

print("\nResizing of Training Images:")
trainData, corruptListTrain = resizeImages(trainData)
print("\nShape of Training Data = {}".format(trainData.shape))
print("Shape of Training Labels = {}".format(trainLabels.shape))

Xtrain = np.delete(trainData, corruptListTrain, 0)
Ytrain = np.delete(trainLabels, corruptListTrain, 0)
print(Xtrain.shape, Ytrain.shape)

# Save the Resized Training Data and Training Labels into numpy file
np.save('/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/trainData_32.npy', Xtrain)
np.save('/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/trainLabels_32.npy', Ytrain)

print("Processing of Testing Data")
print("---------------------------")

testFile = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/GTSRB/Test.csv")
testPath = "/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/GTSRB/"
testData = testPath + testFile['Path'].values
testLabels = testFile['ClassId'].values
print("Total Testing Data = {}".format(testData.shape))

print("\nResizing of Testing Images:")
testData, corruptListTest = resizeImages(testData)
print("\nShape of Testing Data = {}".format(testData.shape))
print("Shape of Testing Labels = {}".format(testLabels.shape))

Xtest = np.delete(testData, corruptListTest, 0)
Ytest = np.delete(testLabels, corruptListTest, 0)
print(Xtest.shape, Ytest.shape)

# Save the Resized Testing Data and Testing Labels into numpy file
np.save('/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/testData_32.npy', Xtest)
np.save('/content/drive/MyDrive/Colab Notebooks/Spring Summer 2021/Research Methodology/Project/testLabels_32.npy', Ytest)